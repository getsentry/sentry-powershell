name: Test

on:
  push:
    branches:
      - 'main'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  test:
    name: ${{ matrix.os }} - ${{ matrix.shell }}
    runs-on: ${{ matrix.os }}-latest

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows, macos]
        shell: [pwsh]
        include:
          - os: windows
            shell: powershell

    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache lib directory
        uses: actions/cache@v4
        with:
          path: module/lib
          key: lib-${{ hashFiles('tools/*.properties') }}

      - run: ./tools/init.ps1
        # This development script only runs on PowerShell core, not Windows PowerShell.
        shell: pwsh

        # We don't test module loading with Pester because we're unable to unload the module between tests.
      - name: Module loading
        run: |
          # Loading the first time
          Get-Item ./module/Sentry.psd1 | Import-Module -PassThru
          # This needs to return actual types (method overloads)
          '[Sentry.SentrySdk]::init'
          # Loading the second time must be possible, without errors
          Get-Item ./module/Sentry.psd1 | Import-Module -PassThru
          # And accessing APIs must still work too
          '[Sentry.SentrySdk]::init'

      - name: Unit tests
        run: |
          Get-Item ./module/Sentry.psd1 | Import-Module -PassThru
          # Run Pester tests with Code Coverage
          $config = New-PesterConfiguration
          $config.Run.Path = "tests"
          $config.CodeCoverage.Enabled = $true
          $config.TestResult.Enabled = $true
          Invoke-Pester -Configuration $config

      - name: Upload code coverage report
        uses: actions/upload-artifact@v4
        if: ${{ success() }}
        with:
          name: code-coverage-report
          path: coverage.xml
